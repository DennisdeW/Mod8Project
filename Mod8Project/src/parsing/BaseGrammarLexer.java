// Generated from BaseGrammar.g4 by ANTLR 4.4
package parsing;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BaseGrammarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		INT=1, BOOL=2, VOID=3, STRING=4, FOR=5, WHILE=6, IF=7, ELSE=8, TRUE=9, 
		FALSE=10, AND=11, OR=12, XOR=13, NOT=14, RETURN=15, BREAK=16, DEF=17, 
		LOCK=18, UNLOCK=19, SHARED=20, UNDERSCORE=21, DOT=22, COMMA=23, SEMI=24, 
		EXCLAMATION=25, LBRACE=26, RBRACE=27, LCURL=28, RCURL=29, LSQUARE=30, 
		RSQUARE=31, PLUS=32, MINUS=33, TIMES=34, DIV=35, MOD=36, SQUOT=37, DQUOT=38, 
		BACKSLASH=39, TIDLE=40, HAT=41, GT=42, LT=43, EQ=44, ARROW=45, GE=46, 
		LE=47, NE=48, TYPE=49, ID=50, NUMBER=51, WS=52;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'"
	};
	public static final String[] ruleNames = {
		"INT", "BOOL", "VOID", "STRING", "FOR", "WHILE", "IF", "ELSE", "TRUE", 
		"FALSE", "AND", "OR", "XOR", "NOT", "RETURN", "BREAK", "DEF", "LOCK", 
		"UNLOCK", "SHARED", "UNDERSCORE", "DOT", "COMMA", "SEMI", "EXCLAMATION", 
		"LBRACE", "RBRACE", "LCURL", "RCURL", "LSQUARE", "RSQUARE", "PLUS", "MINUS", 
		"TIMES", "DIV", "MOD", "SQUOT", "DQUOT", "BACKSLASH", "TIDLE", "HAT", 
		"GT", "LT", "EQ", "ARROW", "GE", "LE", "NE", "TYPE", "ID", "NUMBER", "LCASE", 
		"UCASE", "LETTER", "ZERO", "NONZERO", "DIGIT", "A", "B", "C", "D", "E", 
		"F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", 
		"T", "U", "V", "W", "X", "Y", "Z", "WS"
	};


	public BaseGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BaseGrammar.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\66\u01b0\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t"+
		"=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4"+
		"I\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\t"+
		"T\4U\tU\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3"+
		"\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b"+
		"\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13"+
		"\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3"+
		"\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3"+
		"\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3"+
		"\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3"+
		"\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3"+
		"\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3"+
		"*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\61"+
		"\3\62\3\62\3\62\3\62\7\62\u0151\n\62\f\62\16\62\u0154\13\62\3\63\3\63"+
		"\3\63\3\63\7\63\u015a\n\63\f\63\16\63\u015d\13\63\3\64\3\64\7\64\u0161"+
		"\n\64\f\64\16\64\u0164\13\64\3\64\5\64\u0167\n\64\3\65\3\65\3\66\3\66"+
		"\3\67\3\67\5\67\u016f\n\67\38\38\39\39\3:\3:\5:\u0177\n:\3;\3;\3<\3<\3"+
		"=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3"+
		"H\3I\3I\3J\3J\3K\3K\3L\3L\3M\3M\3N\3N\3O\3O\3P\3P\3Q\3Q\3R\3R\3S\3S\3"+
		"T\3T\3U\3U\3U\3U\2\2V\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27"+
		"\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63"+
		"e\64g\65i\2k\2m\2o\2q\2s\2u\2w\2y\2{\2}\2\177\2\u0081\2\u0083\2\u0085"+
		"\2\u0087\2\u0089\2\u008b\2\u008d\2\u008f\2\u0091\2\u0093\2\u0095\2\u0097"+
		"\2\u0099\2\u009b\2\u009d\2\u009f\2\u00a1\2\u00a3\2\u00a5\2\u00a7\2\u00a9"+
		"\66\3\2 \3\2c|\3\2C\\\3\2\63;\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg"+
		"\4\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2P"+
		"Ppp\4\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4"+
		"\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\||\5\2\13\f\17\17\"\"\u0199\2\3\3\2\2\2"+
		"\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2"+
		"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2"+
		"\2\2\2e\3\2\2\2\2g\3\2\2\2\2\u00a9\3\2\2\2\3\u00ab\3\2\2\2\5\u00af\3\2"+
		"\2\2\7\u00b4\3\2\2\2\t\u00b9\3\2\2\2\13\u00c0\3\2\2\2\r\u00c4\3\2\2\2"+
		"\17\u00ca\3\2\2\2\21\u00cd\3\2\2\2\23\u00d2\3\2\2\2\25\u00d7\3\2\2\2\27"+
		"\u00dd\3\2\2\2\31\u00e1\3\2\2\2\33\u00e4\3\2\2\2\35\u00e8\3\2\2\2\37\u00ec"+
		"\3\2\2\2!\u00f3\3\2\2\2#\u00f9\3\2\2\2%\u00fd\3\2\2\2\'\u0102\3\2\2\2"+
		")\u0109\3\2\2\2+\u0110\3\2\2\2-\u0112\3\2\2\2/\u0114\3\2\2\2\61\u0116"+
		"\3\2\2\2\63\u0118\3\2\2\2\65\u011a\3\2\2\2\67\u011c\3\2\2\29\u011e\3\2"+
		"\2\2;\u0120\3\2\2\2=\u0122\3\2\2\2?\u0124\3\2\2\2A\u0126\3\2\2\2C\u0128"+
		"\3\2\2\2E\u012a\3\2\2\2G\u012c\3\2\2\2I\u012e\3\2\2\2K\u0130\3\2\2\2M"+
		"\u0132\3\2\2\2O\u0134\3\2\2\2Q\u0136\3\2\2\2S\u0138\3\2\2\2U\u013a\3\2"+
		"\2\2W\u013c\3\2\2\2Y\u013e\3\2\2\2[\u0140\3\2\2\2]\u0143\3\2\2\2_\u0146"+
		"\3\2\2\2a\u0149\3\2\2\2c\u014c\3\2\2\2e\u0155\3\2\2\2g\u0166\3\2\2\2i"+
		"\u0168\3\2\2\2k\u016a\3\2\2\2m\u016e\3\2\2\2o\u0170\3\2\2\2q\u0172\3\2"+
		"\2\2s\u0176\3\2\2\2u\u0178\3\2\2\2w\u017a\3\2\2\2y\u017c\3\2\2\2{\u017e"+
		"\3\2\2\2}\u0180\3\2\2\2\177\u0182\3\2\2\2\u0081\u0184\3\2\2\2\u0083\u0186"+
		"\3\2\2\2\u0085\u0188\3\2\2\2\u0087\u018a\3\2\2\2\u0089\u018c\3\2\2\2\u008b"+
		"\u018e\3\2\2\2\u008d\u0190\3\2\2\2\u008f\u0192\3\2\2\2\u0091\u0194\3\2"+
		"\2\2\u0093\u0196\3\2\2\2\u0095\u0198\3\2\2\2\u0097\u019a\3\2\2\2\u0099"+
		"\u019c\3\2\2\2\u009b\u019e\3\2\2\2\u009d\u01a0\3\2\2\2\u009f\u01a2\3\2"+
		"\2\2\u00a1\u01a4\3\2\2\2\u00a3\u01a6\3\2\2\2\u00a5\u01a8\3\2\2\2\u00a7"+
		"\u01aa\3\2\2\2\u00a9\u01ac\3\2\2\2\u00ab\u00ac\5\u0085C\2\u00ac\u00ad"+
		"\5\u008fH\2\u00ad\u00ae\5\u009bN\2\u00ae\4\3\2\2\2\u00af\u00b0\5w<\2\u00b0"+
		"\u00b1\5\u0091I\2\u00b1\u00b2\5\u0091I\2\u00b2\u00b3\5\u008bF\2\u00b3"+
		"\6\3\2\2\2\u00b4\u00b5\5\u009fP\2\u00b5\u00b6\5\u0091I\2\u00b6\u00b7\5"+
		"\u0085C\2\u00b7\u00b8\5{>\2\u00b8\b\3\2\2\2\u00b9\u00ba\5\u0099M\2\u00ba"+
		"\u00bb\5\u009bN\2\u00bb\u00bc\5\u0097L\2\u00bc\u00bd\5\u0085C\2\u00bd"+
		"\u00be\5\u008fH\2\u00be\u00bf\5\u0081A\2\u00bf\n\3\2\2\2\u00c0\u00c1\5"+
		"\177@\2\u00c1\u00c2\5\u0091I\2\u00c2\u00c3\5\u0097L\2\u00c3\f\3\2\2\2"+
		"\u00c4\u00c5\5\u00a1Q\2\u00c5\u00c6\5\u0083B\2\u00c6\u00c7\5\u0085C\2"+
		"\u00c7\u00c8\5\u008bF\2\u00c8\u00c9\5}?\2\u00c9\16\3\2\2\2\u00ca\u00cb"+
		"\5\u0085C\2\u00cb\u00cc\5\177@\2\u00cc\20\3\2\2\2\u00cd\u00ce\5}?\2\u00ce"+
		"\u00cf\5\u008bF\2\u00cf\u00d0\5\u0099M\2\u00d0\u00d1\5}?\2\u00d1\22\3"+
		"\2\2\2\u00d2\u00d3\5\u009bN\2\u00d3\u00d4\5\u0097L\2\u00d4\u00d5\5\u009d"+
		"O\2\u00d5\u00d6\5}?\2\u00d6\24\3\2\2\2\u00d7\u00d8\5\177@\2\u00d8\u00d9"+
		"\5u;\2\u00d9\u00da\5\u008bF\2\u00da\u00db\5\u0099M\2\u00db\u00dc\5}?\2"+
		"\u00dc\26\3\2\2\2\u00dd\u00de\5u;\2\u00de\u00df\5\u008fH\2\u00df\u00e0"+
		"\5{>\2\u00e0\30\3\2\2\2\u00e1\u00e2\5\u0091I\2\u00e2\u00e3\5\u0097L\2"+
		"\u00e3\32\3\2\2\2\u00e4\u00e5\5\u00a3R\2\u00e5\u00e6\5\u0091I\2\u00e6"+
		"\u00e7\5\u0097L\2\u00e7\34\3\2\2\2\u00e8\u00e9\5\u008fH\2\u00e9\u00ea"+
		"\5\u0091I\2\u00ea\u00eb\5\u009bN\2\u00eb\36\3\2\2\2\u00ec\u00ed\5\u0097"+
		"L\2\u00ed\u00ee\5}?\2\u00ee\u00ef\5\u009bN\2\u00ef\u00f0\5\u009dO\2\u00f0"+
		"\u00f1\5\u0097L\2\u00f1\u00f2\5\u008fH\2\u00f2 \3\2\2\2\u00f3\u00f4\5"+
		"w<\2\u00f4\u00f5\5\u0097L\2\u00f5\u00f6\5}?\2\u00f6\u00f7\5u;\2\u00f7"+
		"\u00f8\5\u0089E\2\u00f8\"\3\2\2\2\u00f9\u00fa\5{>\2\u00fa\u00fb\5}?\2"+
		"\u00fb\u00fc\5\177@\2\u00fc$\3\2\2\2\u00fd\u00fe\5\u008bF\2\u00fe\u00ff"+
		"\5\u0091I\2\u00ff\u0100\5y=\2\u0100\u0101\5\u0089E\2\u0101&\3\2\2\2\u0102"+
		"\u0103\5\u009dO\2\u0103\u0104\5\u008fH\2\u0104\u0105\5\u008bF\2\u0105"+
		"\u0106\5\u0091I\2\u0106\u0107\5y=\2\u0107\u0108\5\u0089E\2\u0108(\3\2"+
		"\2\2\u0109\u010a\5\u0099M\2\u010a\u010b\5\u0083B\2\u010b\u010c\5u;\2\u010c"+
		"\u010d\5\u0097L\2\u010d\u010e\5}?\2\u010e\u010f\5{>\2\u010f*\3\2\2\2\u0110"+
		"\u0111\7a\2\2\u0111,\3\2\2\2\u0112\u0113\7\60\2\2\u0113.\3\2\2\2\u0114"+
		"\u0115\7.\2\2\u0115\60\3\2\2\2\u0116\u0117\7=\2\2\u0117\62\3\2\2\2\u0118"+
		"\u0119\7#\2\2\u0119\64\3\2\2\2\u011a\u011b\7*\2\2\u011b\66\3\2\2\2\u011c"+
		"\u011d\7+\2\2\u011d8\3\2\2\2\u011e\u011f\7}\2\2\u011f:\3\2\2\2\u0120\u0121"+
		"\7\177\2\2\u0121<\3\2\2\2\u0122\u0123\7]\2\2\u0123>\3\2\2\2\u0124\u0125"+
		"\7_\2\2\u0125@\3\2\2\2\u0126\u0127\7-\2\2\u0127B\3\2\2\2\u0128\u0129\7"+
		"/\2\2\u0129D\3\2\2\2\u012a\u012b\7,\2\2\u012bF\3\2\2\2\u012c\u012d\7\61"+
		"\2\2\u012dH\3\2\2\2\u012e\u012f\7\'\2\2\u012fJ\3\2\2\2\u0130\u0131\7)"+
		"\2\2\u0131L\3\2\2\2\u0132\u0133\7$\2\2\u0133N\3\2\2\2\u0134\u0135\7^\2"+
		"\2\u0135P\3\2\2\2\u0136\u0137\7\u0080\2\2\u0137R\3\2\2\2\u0138\u0139\7"+
		"`\2\2\u0139T\3\2\2\2\u013a\u013b\7@\2\2\u013bV\3\2\2\2\u013c\u013d\7>"+
		"\2\2\u013dX\3\2\2\2\u013e\u013f\7?\2\2\u013fZ\3\2\2\2\u0140\u0141\5C\""+
		"\2\u0141\u0142\5U+\2\u0142\\\3\2\2\2\u0143\u0144\5U+\2\u0144\u0145\5Y"+
		"-\2\u0145^\3\2\2\2\u0146\u0147\5W,\2\u0147\u0148\5Y-\2\u0148`\3\2\2\2"+
		"\u0149\u014a\5\63\32\2\u014a\u014b\5Y-\2\u014bb\3\2\2\2\u014c\u0152\5"+
		"k\66\2\u014d\u0151\5m\67\2\u014e\u0151\5s:\2\u014f\u0151\5+\26\2\u0150"+
		"\u014d\3\2\2\2\u0150\u014e\3\2\2\2\u0150\u014f\3\2\2\2\u0151\u0154\3\2"+
		"\2\2\u0152\u0150\3\2\2\2\u0152\u0153\3\2\2\2\u0153d\3\2\2\2\u0154\u0152"+
		"\3\2\2\2\u0155\u015b\5i\65\2\u0156\u015a\5m\67\2\u0157\u015a\5s:\2\u0158"+
		"\u015a\5+\26\2\u0159\u0156\3\2\2\2\u0159\u0157\3\2\2\2\u0159\u0158\3\2"+
		"\2\2\u015a\u015d\3\2\2\2\u015b\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c"+
		"f\3\2\2\2\u015d\u015b\3\2\2\2\u015e\u0162\5q9\2\u015f\u0161\5s:\2\u0160"+
		"\u015f\3\2\2\2\u0161\u0164\3\2\2\2\u0162\u0160\3\2\2\2\u0162\u0163\3\2"+
		"\2\2\u0163\u0167\3\2\2\2\u0164\u0162\3\2\2\2\u0165\u0167\5o8\2\u0166\u015e"+
		"\3\2\2\2\u0166\u0165\3\2\2\2\u0167h\3\2\2\2\u0168\u0169\t\2\2\2\u0169"+
		"j\3\2\2\2\u016a\u016b\t\3\2\2\u016bl\3\2\2\2\u016c\u016f\5i\65\2\u016d"+
		"\u016f\5k\66\2\u016e\u016c\3\2\2\2\u016e\u016d\3\2\2\2\u016fn\3\2\2\2"+
		"\u0170\u0171\7\62\2\2\u0171p\3\2\2\2\u0172\u0173\t\4\2\2\u0173r\3\2\2"+
		"\2\u0174\u0177\5o8\2\u0175\u0177\5q9\2\u0176\u0174\3\2\2\2\u0176\u0175"+
		"\3\2\2\2\u0177t\3\2\2\2\u0178\u0179\t\5\2\2\u0179v\3\2\2\2\u017a\u017b"+
		"\t\6\2\2\u017bx\3\2\2\2\u017c\u017d\t\7\2\2\u017dz\3\2\2\2\u017e\u017f"+
		"\t\b\2\2\u017f|\3\2\2\2\u0180\u0181\t\t\2\2\u0181~\3\2\2\2\u0182\u0183"+
		"\t\n\2\2\u0183\u0080\3\2\2\2\u0184\u0185\t\13\2\2\u0185\u0082\3\2\2\2"+
		"\u0186\u0187\t\f\2\2\u0187\u0084\3\2\2\2\u0188\u0189\t\r\2\2\u0189\u0086"+
		"\3\2\2\2\u018a\u018b\t\16\2\2\u018b\u0088\3\2\2\2\u018c\u018d\t\17\2\2"+
		"\u018d\u008a\3\2\2\2\u018e\u018f\t\20\2\2\u018f\u008c\3\2\2\2\u0190\u0191"+
		"\t\21\2\2\u0191\u008e\3\2\2\2\u0192\u0193\t\22\2\2\u0193\u0090\3\2\2\2"+
		"\u0194\u0195\t\23\2\2\u0195\u0092\3\2\2\2\u0196\u0197\t\24\2\2\u0197\u0094"+
		"\3\2\2\2\u0198\u0199\t\25\2\2\u0199\u0096\3\2\2\2\u019a\u019b\t\26\2\2"+
		"\u019b\u0098\3\2\2\2\u019c\u019d\t\27\2\2\u019d\u009a\3\2\2\2\u019e\u019f"+
		"\t\30\2\2\u019f\u009c\3\2\2\2\u01a0\u01a1\t\31\2\2\u01a1\u009e\3\2\2\2"+
		"\u01a2\u01a3\t\32\2\2\u01a3\u00a0\3\2\2\2\u01a4\u01a5\t\33\2\2\u01a5\u00a2"+
		"\3\2\2\2\u01a6\u01a7\t\34\2\2\u01a7\u00a4\3\2\2\2\u01a8\u01a9\t\35\2\2"+
		"\u01a9\u00a6\3\2\2\2\u01aa\u01ab\t\36\2\2\u01ab\u00a8\3\2\2\2\u01ac\u01ad"+
		"\t\37\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01af\bU\2\2\u01af\u00aa\3\2\2\2\13"+
		"\2\u0150\u0152\u0159\u015b\u0162\u0166\u016e\u0176\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}