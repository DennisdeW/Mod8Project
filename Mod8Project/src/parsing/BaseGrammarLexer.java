// Generated from BaseGrammar.g4 by ANTLR 4.4
package parsing;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BaseGrammarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		INT=1, BOOL=2, VOID=3, STRING=4, FOR=5, WHILE=6, IF=7, ELSE=8, TRUE=9, 
		FALSE=10, AND=11, OR=12, XOR=13, NAND=14, NOR=15, NXOR=16, NOT=17, RETURN=18, 
		BREAK=19, DEF=20, LOCK=21, UNLOCK=22, SHARED=23, PROGRAM=24, SPID=25, 
		OUT=26, IN=27, UNDERSCORE=28, DOT=29, COMMA=30, SEMI=31, EXCLAMATION=32, 
		LBRACE=33, RBRACE=34, LCURL=35, RCURL=36, LSQUARE=37, RSQUARE=38, PLUS=39, 
		MINUS=40, TIMES=41, DIV=42, MOD=43, AMP=44, SQUOT=45, DQUOT=46, BACKSLASH=47, 
		TIDLE=48, HAT=49, GT=50, LT=51, EQ=52, ARROW=53, GE=54, LE=55, NE=56, 
		TYPE=57, ID=58, NUMBER=59, COMMENT=60, WS=61;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='"
	};
	public static final String[] ruleNames = {
		"INT", "BOOL", "VOID", "STRING", "FOR", "WHILE", "IF", "ELSE", "TRUE", 
		"FALSE", "AND", "OR", "XOR", "NAND", "NOR", "NXOR", "NOT", "RETURN", "BREAK", 
		"DEF", "LOCK", "UNLOCK", "SHARED", "PROGRAM", "SPID", "OUT", "IN", "UNDERSCORE", 
		"DOT", "COMMA", "SEMI", "EXCLAMATION", "LBRACE", "RBRACE", "LCURL", "RCURL", 
		"LSQUARE", "RSQUARE", "PLUS", "MINUS", "TIMES", "DIV", "MOD", "AMP", "SQUOT", 
		"DQUOT", "BACKSLASH", "TIDLE", "HAT", "GT", "LT", "EQ", "ARROW", "GE", 
		"LE", "NE", "TYPE", "ID", "NUMBER", "LCASE", "UCASE", "LETTER", "ZERO", 
		"NONZERO", "DIGIT", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", 
		"K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", 
		"Y", "Z", "COMMENT", "WS"
	};


	public BaseGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BaseGrammar.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2?\u01f4\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\3\2\3\2"+
		"\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3"+
		"\5\3\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t"+
		"\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f"+
		"\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20"+
		"\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35"+
		"\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3"+
		"\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61"+
		"\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3\67"+
		"\38\38\38\39\39\39\3:\3:\3:\3:\7:\u0188\n:\f:\16:\u018b\13:\3;\3;\3;\3"+
		";\7;\u0191\n;\f;\16;\u0194\13;\3<\3<\7<\u0198\n<\f<\16<\u019b\13<\3<\5"+
		"<\u019e\n<\3=\3=\3>\3>\3?\3?\5?\u01a6\n?\3@\3@\3A\3A\3B\3B\5B\u01ae\n"+
		"B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K\3K\3L\3L\3M\3M\3"+
		"N\3N\3O\3O\3P\3P\3Q\3Q\3R\3R\3S\3S\3T\3T\3U\3U\3V\3V\3W\3W\3X\3X\3Y\3"+
		"Y\3Z\3Z\3[\3[\3\\\3\\\3]\3]\3]\7]\u01e7\n]\f]\16]\u01ea\13]\3]\3]\3]\3"+
		"]\3]\3^\3^\3^\3^\3\u01e8\2_\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25"+
		"\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32"+
		"\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a"+
		"\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y\2{\2}\2\177\2\u0081\2\u0083\2\u0085"+
		"\2\u0087\2\u0089\2\u008b\2\u008d\2\u008f\2\u0091\2\u0093\2\u0095\2\u0097"+
		"\2\u0099\2\u009b\2\u009d\2\u009f\2\u00a1\2\u00a3\2\u00a5\2\u00a7\2\u00a9"+
		"\2\u00ab\2\u00ad\2\u00af\2\u00b1\2\u00b3\2\u00b5\2\u00b7\2\u00b9>\u00bb"+
		"?\3\2 \3\2c|\3\2C\\\3\2\63;\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4"+
		"\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPp"+
		"p\4\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2"+
		"YYyy\4\2ZZzz\4\2[[{{\4\2\\\\||\5\2\13\f\17\17\"\"\u01de\2\3\3\2\2\2\2"+
		"\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2"+
		"\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2"+
		"\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2"+
		"\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2"+
		"\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2"+
		"\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2"+
		"K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3"+
		"\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2"+
		"\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2"+
		"q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2\u00b9\3\2\2\2\2\u00bb\3\2"+
		"\2\2\3\u00bd\3\2\2\2\5\u00c1\3\2\2\2\7\u00c6\3\2\2\2\t\u00cb\3\2\2\2\13"+
		"\u00d2\3\2\2\2\r\u00d6\3\2\2\2\17\u00dc\3\2\2\2\21\u00df\3\2\2\2\23\u00e4"+
		"\3\2\2\2\25\u00e9\3\2\2\2\27\u00ef\3\2\2\2\31\u00f3\3\2\2\2\33\u00f6\3"+
		"\2\2\2\35\u00fa\3\2\2\2\37\u00ff\3\2\2\2!\u0103\3\2\2\2#\u0108\3\2\2\2"+
		"%\u010c\3\2\2\2\'\u0113\3\2\2\2)\u0119\3\2\2\2+\u011d\3\2\2\2-\u0122\3"+
		"\2\2\2/\u0129\3\2\2\2\61\u0130\3\2\2\2\63\u0138\3\2\2\2\65\u013e\3\2\2"+
		"\2\67\u0142\3\2\2\29\u0145\3\2\2\2;\u0147\3\2\2\2=\u0149\3\2\2\2?\u014b"+
		"\3\2\2\2A\u014d\3\2\2\2C\u014f\3\2\2\2E\u0151\3\2\2\2G\u0153\3\2\2\2I"+
		"\u0155\3\2\2\2K\u0157\3\2\2\2M\u0159\3\2\2\2O\u015b\3\2\2\2Q\u015d\3\2"+
		"\2\2S\u015f\3\2\2\2U\u0161\3\2\2\2W\u0163\3\2\2\2Y\u0165\3\2\2\2[\u0167"+
		"\3\2\2\2]\u0169\3\2\2\2_\u016b\3\2\2\2a\u016d\3\2\2\2c\u016f\3\2\2\2e"+
		"\u0171\3\2\2\2g\u0173\3\2\2\2i\u0175\3\2\2\2k\u0177\3\2\2\2m\u017a\3\2"+
		"\2\2o\u017d\3\2\2\2q\u0180\3\2\2\2s\u0183\3\2\2\2u\u018c\3\2\2\2w\u019d"+
		"\3\2\2\2y\u019f\3\2\2\2{\u01a1\3\2\2\2}\u01a5\3\2\2\2\177\u01a7\3\2\2"+
		"\2\u0081\u01a9\3\2\2\2\u0083\u01ad\3\2\2\2\u0085\u01af\3\2\2\2\u0087\u01b1"+
		"\3\2\2\2\u0089\u01b3\3\2\2\2\u008b\u01b5\3\2\2\2\u008d\u01b7\3\2\2\2\u008f"+
		"\u01b9\3\2\2\2\u0091\u01bb\3\2\2\2\u0093\u01bd\3\2\2\2\u0095\u01bf\3\2"+
		"\2\2\u0097\u01c1\3\2\2\2\u0099\u01c3\3\2\2\2\u009b\u01c5\3\2\2\2\u009d"+
		"\u01c7\3\2\2\2\u009f\u01c9\3\2\2\2\u00a1\u01cb\3\2\2\2\u00a3\u01cd\3\2"+
		"\2\2\u00a5\u01cf\3\2\2\2\u00a7\u01d1\3\2\2\2\u00a9\u01d3\3\2\2\2\u00ab"+
		"\u01d5\3\2\2\2\u00ad\u01d7\3\2\2\2\u00af\u01d9\3\2\2\2\u00b1\u01db\3\2"+
		"\2\2\u00b3\u01dd\3\2\2\2\u00b5\u01df\3\2\2\2\u00b7\u01e1\3\2\2\2\u00b9"+
		"\u01e3\3\2\2\2\u00bb\u01f0\3\2\2\2\u00bd\u00be\5\u0095K\2\u00be\u00bf"+
		"\5\u009fP\2\u00bf\u00c0\5\u00abV\2\u00c0\4\3\2\2\2\u00c1\u00c2\5\u0087"+
		"D\2\u00c2\u00c3\5\u00a1Q\2\u00c3\u00c4\5\u00a1Q\2\u00c4\u00c5\5\u009b"+
		"N\2\u00c5\6\3\2\2\2\u00c6\u00c7\5\u00afX\2\u00c7\u00c8\5\u00a1Q\2\u00c8"+
		"\u00c9\5\u0095K\2\u00c9\u00ca\5\u008bF\2\u00ca\b\3\2\2\2\u00cb\u00cc\5"+
		"\u00a9U\2\u00cc\u00cd\5\u00abV\2\u00cd\u00ce\5\u00a7T\2\u00ce\u00cf\5"+
		"\u0095K\2\u00cf\u00d0\5\u009fP\2\u00d0\u00d1\5\u0091I\2\u00d1\n\3\2\2"+
		"\2\u00d2\u00d3\5\u008fH\2\u00d3\u00d4\5\u00a1Q\2\u00d4\u00d5\5\u00a7T"+
		"\2\u00d5\f\3\2\2\2\u00d6\u00d7\5\u00b1Y\2\u00d7\u00d8\5\u0093J\2\u00d8"+
		"\u00d9\5\u0095K\2\u00d9\u00da\5\u009bN\2\u00da\u00db\5\u008dG\2\u00db"+
		"\16\3\2\2\2\u00dc\u00dd\5\u0095K\2\u00dd\u00de\5\u008fH\2\u00de\20\3\2"+
		"\2\2\u00df\u00e0\5\u008dG\2\u00e0\u00e1\5\u009bN\2\u00e1\u00e2\5\u00a9"+
		"U\2\u00e2\u00e3\5\u008dG\2\u00e3\22\3\2\2\2\u00e4\u00e5\5\u00abV\2\u00e5"+
		"\u00e6\5\u00a7T\2\u00e6\u00e7\5\u00adW\2\u00e7\u00e8\5\u008dG\2\u00e8"+
		"\24\3\2\2\2\u00e9\u00ea\5\u008fH\2\u00ea\u00eb\5\u0085C\2\u00eb\u00ec"+
		"\5\u009bN\2\u00ec\u00ed\5\u00a9U\2\u00ed\u00ee\5\u008dG\2\u00ee\26\3\2"+
		"\2\2\u00ef\u00f0\5\u0085C\2\u00f0\u00f1\5\u009fP\2\u00f1\u00f2\5\u008b"+
		"F\2\u00f2\30\3\2\2\2\u00f3\u00f4\5\u00a1Q\2\u00f4\u00f5\5\u00a7T\2\u00f5"+
		"\32\3\2\2\2\u00f6\u00f7\5\u00b3Z\2\u00f7\u00f8\5\u00a1Q\2\u00f8\u00f9"+
		"\5\u00a7T\2\u00f9\34\3\2\2\2\u00fa\u00fb\5\u009fP\2\u00fb\u00fc\5\u0085"+
		"C\2\u00fc\u00fd\5\u009fP\2\u00fd\u00fe\5\u008bF\2\u00fe\36\3\2\2\2\u00ff"+
		"\u0100\5\u009fP\2\u0100\u0101\5\u00a1Q\2\u0101\u0102\5\u00a7T\2\u0102"+
		" \3\2\2\2\u0103\u0104\5\u009fP\2\u0104\u0105\5\u00b3Z\2\u0105\u0106\5"+
		"\u00a1Q\2\u0106\u0107\5\u00a7T\2\u0107\"\3\2\2\2\u0108\u0109\5\u009fP"+
		"\2\u0109\u010a\5\u00a1Q\2\u010a\u010b\5\u00abV\2\u010b$\3\2\2\2\u010c"+
		"\u010d\5\u00a7T\2\u010d\u010e\5\u008dG\2\u010e\u010f\5\u00abV\2\u010f"+
		"\u0110\5\u00adW\2\u0110\u0111\5\u00a7T\2\u0111\u0112\5\u009fP\2\u0112"+
		"&\3\2\2\2\u0113\u0114\5\u0087D\2\u0114\u0115\5\u00a7T\2\u0115\u0116\5"+
		"\u008dG\2\u0116\u0117\5\u0085C\2\u0117\u0118\5\u0099M\2\u0118(\3\2\2\2"+
		"\u0119\u011a\5\u008bF\2\u011a\u011b\5\u008dG\2\u011b\u011c\5\u008fH\2"+
		"\u011c*\3\2\2\2\u011d\u011e\5\u009bN\2\u011e\u011f\5\u00a1Q\2\u011f\u0120"+
		"\5\u0089E\2\u0120\u0121\5\u0099M\2\u0121,\3\2\2\2\u0122\u0123\5\u00ad"+
		"W\2\u0123\u0124\5\u009fP\2\u0124\u0125\5\u009bN\2\u0125\u0126\5\u00a1"+
		"Q\2\u0126\u0127\5\u0089E\2\u0127\u0128\5\u0099M\2\u0128.\3\2\2\2\u0129"+
		"\u012a\5\u00a9U\2\u012a\u012b\5\u0093J\2\u012b\u012c\5\u0085C\2\u012c"+
		"\u012d\5\u00a7T\2\u012d\u012e\5\u008dG\2\u012e\u012f\5\u008bF\2\u012f"+
		"\60\3\2\2\2\u0130\u0131\5\u00a3R\2\u0131\u0132\5\u00a7T\2\u0132\u0133"+
		"\5\u00a1Q\2\u0133\u0134\5\u0091I\2\u0134\u0135\5\u00a7T\2\u0135\u0136"+
		"\5\u0085C\2\u0136\u0137\5\u009dO\2\u0137\62\3\2\2\2\u0138\u0139\7&\2\2"+
		"\u0139\u013a\5\u00a9U\2\u013a\u013b\5\u00a3R\2\u013b\u013c\5\u0095K\2"+
		"\u013c\u013d\5\u008bF\2\u013d\64\3\2\2\2\u013e\u013f\5\u00a1Q\2\u013f"+
		"\u0140\5\u00adW\2\u0140\u0141\5\u00abV\2\u0141\66\3\2\2\2\u0142\u0143"+
		"\5\u0095K\2\u0143\u0144\5\u009fP\2\u01448\3\2\2\2\u0145\u0146\7a\2\2\u0146"+
		":\3\2\2\2\u0147\u0148\7\60\2\2\u0148<\3\2\2\2\u0149\u014a\7.\2\2\u014a"+
		">\3\2\2\2\u014b\u014c\7=\2\2\u014c@\3\2\2\2\u014d\u014e\7#\2\2\u014eB"+
		"\3\2\2\2\u014f\u0150\7*\2\2\u0150D\3\2\2\2\u0151\u0152\7+\2\2\u0152F\3"+
		"\2\2\2\u0153\u0154\7}\2\2\u0154H\3\2\2\2\u0155\u0156\7\177\2\2\u0156J"+
		"\3\2\2\2\u0157\u0158\7]\2\2\u0158L\3\2\2\2\u0159\u015a\7_\2\2\u015aN\3"+
		"\2\2\2\u015b\u015c\7-\2\2\u015cP\3\2\2\2\u015d\u015e\7/\2\2\u015eR\3\2"+
		"\2\2\u015f\u0160\7,\2\2\u0160T\3\2\2\2\u0161\u0162\7\61\2\2\u0162V\3\2"+
		"\2\2\u0163\u0164\7\'\2\2\u0164X\3\2\2\2\u0165\u0166\7(\2\2\u0166Z\3\2"+
		"\2\2\u0167\u0168\7)\2\2\u0168\\\3\2\2\2\u0169\u016a\7$\2\2\u016a^\3\2"+
		"\2\2\u016b\u016c\7^\2\2\u016c`\3\2\2\2\u016d\u016e\7\u0080\2\2\u016eb"+
		"\3\2\2\2\u016f\u0170\7`\2\2\u0170d\3\2\2\2\u0171\u0172\7@\2\2\u0172f\3"+
		"\2\2\2\u0173\u0174\7>\2\2\u0174h\3\2\2\2\u0175\u0176\7?\2\2\u0176j\3\2"+
		"\2\2\u0177\u0178\5Q)\2\u0178\u0179\5e\63\2\u0179l\3\2\2\2\u017a\u017b"+
		"\5e\63\2\u017b\u017c\5i\65\2\u017cn\3\2\2\2\u017d\u017e\5g\64\2\u017e"+
		"\u017f\5i\65\2\u017fp\3\2\2\2\u0180\u0181\5A!\2\u0181\u0182\5i\65\2\u0182"+
		"r\3\2\2\2\u0183\u0189\5{>\2\u0184\u0188\5}?\2\u0185\u0188\5\u0083B\2\u0186"+
		"\u0188\59\35\2\u0187\u0184\3\2\2\2\u0187\u0185\3\2\2\2\u0187\u0186\3\2"+
		"\2\2\u0188\u018b\3\2\2\2\u0189\u0187\3\2\2\2\u0189\u018a\3\2\2\2\u018a"+
		"t\3\2\2\2\u018b\u0189\3\2\2\2\u018c\u0192\5y=\2\u018d\u0191\5}?\2\u018e"+
		"\u0191\5\u0083B\2\u018f\u0191\59\35\2\u0190\u018d\3\2\2\2\u0190\u018e"+
		"\3\2\2\2\u0190\u018f\3\2\2\2\u0191\u0194\3\2\2\2\u0192\u0190\3\2\2\2\u0192"+
		"\u0193\3\2\2\2\u0193v\3\2\2\2\u0194\u0192\3\2\2\2\u0195\u0199\5\u0081"+
		"A\2\u0196\u0198\5\u0083B\2\u0197\u0196\3\2\2\2\u0198\u019b\3\2\2\2\u0199"+
		"\u0197\3\2\2\2\u0199\u019a\3\2\2\2\u019a\u019e\3\2\2\2\u019b\u0199\3\2"+
		"\2\2\u019c\u019e\5\177@\2\u019d\u0195\3\2\2\2\u019d\u019c\3\2\2\2\u019e"+
		"x\3\2\2\2\u019f\u01a0\t\2\2\2\u01a0z\3\2\2\2\u01a1\u01a2\t\3\2\2\u01a2"+
		"|\3\2\2\2\u01a3\u01a6\5y=\2\u01a4\u01a6\5{>\2\u01a5\u01a3\3\2\2\2\u01a5"+
		"\u01a4\3\2\2\2\u01a6~\3\2\2\2\u01a7\u01a8\7\62\2\2\u01a8\u0080\3\2\2\2"+
		"\u01a9\u01aa\t\4\2\2\u01aa\u0082\3\2\2\2\u01ab\u01ae\5\177@\2\u01ac\u01ae"+
		"\5\u0081A\2\u01ad\u01ab\3\2\2\2\u01ad\u01ac\3\2\2\2\u01ae\u0084\3\2\2"+
		"\2\u01af\u01b0\t\5\2\2\u01b0\u0086\3\2\2\2\u01b1\u01b2\t\6\2\2\u01b2\u0088"+
		"\3\2\2\2\u01b3\u01b4\t\7\2\2\u01b4\u008a\3\2\2\2\u01b5\u01b6\t\b\2\2\u01b6"+
		"\u008c\3\2\2\2\u01b7\u01b8\t\t\2\2\u01b8\u008e\3\2\2\2\u01b9\u01ba\t\n"+
		"\2\2\u01ba\u0090\3\2\2\2\u01bb\u01bc\t\13\2\2\u01bc\u0092\3\2\2\2\u01bd"+
		"\u01be\t\f\2\2\u01be\u0094\3\2\2\2\u01bf\u01c0\t\r\2\2\u01c0\u0096\3\2"+
		"\2\2\u01c1\u01c2\t\16\2\2\u01c2\u0098\3\2\2\2\u01c3\u01c4\t\17\2\2\u01c4"+
		"\u009a\3\2\2\2\u01c5\u01c6\t\20\2\2\u01c6\u009c\3\2\2\2\u01c7\u01c8\t"+
		"\21\2\2\u01c8\u009e\3\2\2\2\u01c9\u01ca\t\22\2\2\u01ca\u00a0\3\2\2\2\u01cb"+
		"\u01cc\t\23\2\2\u01cc\u00a2\3\2\2\2\u01cd\u01ce\t\24\2\2\u01ce\u00a4\3"+
		"\2\2\2\u01cf\u01d0\t\25\2\2\u01d0\u00a6\3\2\2\2\u01d1\u01d2\t\26\2\2\u01d2"+
		"\u00a8\3\2\2\2\u01d3\u01d4\t\27\2\2\u01d4\u00aa\3\2\2\2\u01d5\u01d6\t"+
		"\30\2\2\u01d6\u00ac\3\2\2\2\u01d7\u01d8\t\31\2\2\u01d8\u00ae\3\2\2\2\u01d9"+
		"\u01da\t\32\2\2\u01da\u00b0\3\2\2\2\u01db\u01dc\t\33\2\2\u01dc\u00b2\3"+
		"\2\2\2\u01dd\u01de\t\34\2\2\u01de\u00b4\3\2\2\2\u01df\u01e0\t\35\2\2\u01e0"+
		"\u00b6\3\2\2\2\u01e1\u01e2\t\36\2\2\u01e2\u00b8\3\2\2\2\u01e3\u01e4\5"+
		"U+\2\u01e4\u01e8\5S*\2\u01e5\u01e7\13\2\2\2\u01e6\u01e5\3\2\2\2\u01e7"+
		"\u01ea\3\2\2\2\u01e8\u01e9\3\2\2\2\u01e8\u01e6\3\2\2\2\u01e9\u01eb\3\2"+
		"\2\2\u01ea\u01e8\3\2\2\2\u01eb\u01ec\5S*\2\u01ec\u01ed\5U+\2\u01ed\u01ee"+
		"\3\2\2\2\u01ee\u01ef\b]\2\2\u01ef\u00ba\3\2\2\2\u01f0\u01f1\t\37\2\2\u01f1"+
		"\u01f2\3\2\2\2\u01f2\u01f3\b^\2\2\u01f3\u00bc\3\2\2\2\f\2\u0187\u0189"+
		"\u0190\u0192\u0199\u019d\u01a5\u01ad\u01e8\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}